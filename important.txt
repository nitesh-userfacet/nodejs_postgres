LocalStorage and sessionStorage are perfect for
 persisting non-sensitive data needed within client
  scripts between pages (for example: preferences, 
  scores in games). The data stored in localStorage 
  and sessionStorage can easily be read or changed 
  from within the client/browser so should not be
   relied upon for storage of sensitive or security-related 
   data within applications.




Cookies   (used for authentication )

Has different expiration dates (both the server or client can set up expiration date)
The Client can't access the Cookies if the HttpOnly flag is true
Has SSL Support
Data are transferred on each HTTP request
4kb limit


Local Storage

Has no expiration date
Client only
Has no SSL support
Data are not transferred on each HTTP request
5 mb limit (check with the browser)

Session Storage

Data is gone when you close the browser tab
Client only
Has no SSL support
Data are not transferred on each HTTP request
5-10 mb limit (check with the browser)



When Should You Use MongoDB?


*Integrating large amounts of diverse data

If you are bringing together tens or
hundreds of data sources, the flexibility
and power of the document model can create
a single unified view in ways that other 
databases cannot. MongoDB has succeeded 
in bringing such projects to life when 
approaches using other databases have failed.



*Describing complex data structures that evolve

Document databases allow embedding of documents
to describe nested structures and easily tolerate
variations in data in generations of documents.
Specialized data formats like geospatial are 
efficiently supported. This results in a resilient 
repository that doesn’t break or need to be redesigned 
every time something changes.

Storing large volumes of data without structure. A NoSQL database doesn’t limit storable data types. Plus, you can add new types as business needs change.



